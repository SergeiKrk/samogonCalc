import React from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import { Tooltip } from "react-bootstrap";
import Card from "react-bootstrap/Card";
import CardGroup from "react-bootstrap/CardGroup";
import Form from "react-bootstrap/Form";
import Col from "react-bootstrap/Col";
import OverlayTrigger from "react-bootstrap/OverlayTrigger";
import ResultBlockSebestoimApprox from "./ResultBlockSebestoimApprox";
import s from "../Calc.module.css";

const SebestoimApproxCalc = (props) => {
  // for the allValuesOnChange function
  let rawMaterialsRef = React.createRef();
  let massMaterialsRef = React.createRef();
  let costMaterialsRef = React.createRef();
  let yeastCostRef = React.createRef();
  let wgeRef = React.createRef();
  let bentoniteCoalRef = React.createRef();
  let efficiencyRef = React.createRef();
  let headsRef = React.createRef();
  let tailsRef = React.createRef();

  let allValuesOnChange = () => {
    let rawMaterials = rawMaterialsRef.current.value;
    let massMaterials = massMaterialsRef.current.value;
    let costMaterials = costMaterialsRef.current.value;
    let yeastCost = yeastCostRef.current.value;
    let wge = wgeRef.current.value;
    let bentoniteCoal = bentoniteCoalRef.current.value;
    let efficiency = efficiencyRef.current.value;
    let heads = headsRef.current.value;
    let tails = tailsRef.current.value;

    // –û–±—ä–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ —Å–ø–∏—Ä—Ç–∞
    let volumeAbsAlcoholApprox = (
      (Number(rawMaterials) * Number(massMaterials) * Number(efficiency)) /
      100
    ).toFixed(2);

    // –û–±—ä–µ–º –∞–ª–∫–æ–≥–æ–ª—è –ø–∏—Ç–µ–π–Ω–æ–π –∫—Ä–µ–ø–æ—Å—Ç–∏
    let reqVolApprox = (
      (volumeAbsAlcoholApprox * (1 - (Number(heads) + Number(tails)))) /
      0.4
    ).toFixed(2);

    // –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–ª–∫–æ–≥–æ–ª—è –∫—Ä–µ–ø–æ—Å—Ç—å—é 40
    let costLiterApprox = (
      (Number(costMaterials * massMaterials) +
        Number(wge) +
        Number(yeastCost) +
        Number(bentoniteCoal)) /
      reqVolApprox
    ).toFixed(2);
    let costHalfLiterApprox = (costLiterApprox / 2).toFixed(2);

    if (rawMaterials && massMaterials && costMaterials)
      props.addCalculateSebestoimApprox(
        costLiterApprox,
        costHalfLiterApprox,
        volumeAbsAlcoholApprox,
        reqVolApprox
      );
    props.updateAllDataSebestoimApprox(
      rawMaterials,
      massMaterials,
      costMaterials,
      yeastCost,
      wge,
      bentoniteCoal,
      efficiency,
      heads,
      tails
    );
  };

  let addCalculateSebestoimApproxElements =
    props.calculateSebestoimApproxData.map((c) => (
      <ResultBlockSebestoimApprox
        key={c.id}
        volCostLiterApprox={c.volCostLiterApprox}
        volCostHalfLiterApprox={c.volCostHalfLiterApprox}
        volAbsAlcoholApprox={c.volAbsAlcoholApprox}
        volReqVol={c.volReqVol}
      />
    ));

  const materialMassOverlay = (props) => (
    <Tooltip {...props}>
      üëá –û–±—â–∞—è –º–∞—Å—Å–∞ —Å–∞—Ö–∞—Ä–∞, –º—É–∫–∏, –∑–µ—Ä–Ω–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ —Å—ã—Ä—å—è –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å—Ç–∞–≤–∏–ª–∏
      –±—Ä–∞–≥—É
    </Tooltip>
  );
  const costMaterialsOverlay = (props) => (
    <Tooltip {...props}>
      üëá –°—Ç–æ–∏–º–æ—Å—Ç—å —Å—ã—Ä—å—è (—Å–∞—Ö–∞—Ä–∞, –º—É–∫–∏, –∑–µ—Ä–Ω–∞ –∏–ª–∏ –¥—Ä.) –∑–∞ 1 –∫–≥. –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã
      —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞–≤–∏—Ç—å –±—Ä–∞–≥—É
    </Tooltip>
  );
  const rawMaterialsOverlay = (props) => (
    <Tooltip {...props}>
      üëá –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ —Å—ã—Ä—å—ë, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±—Ä–∞–≥—É –¥–ª—è
      —Å–∞–º–æ–≥–æ–Ω–∞
    </Tooltip>
  );
  const yeastCostOverlay = (props) => (
    <Tooltip {...props}>
      üëá –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥—Ä–æ–∂–∂–µ–π, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ –∑–∞—Ç–æ—Ä
    </Tooltip>
  );
  const bentoniteCostOverlay = (props) => (
    <Tooltip {...props}>
      üëá –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–µ–Ω—Ç–æ–Ω–∏—Ç–∞ –∏ —É–≥–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞
      –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –±—Ä–∞–≥–∏ –∏ –±–∏—Å—Ç–∏–ª–ª—è—Ç–∞
    </Tooltip>
  );
  const efficiencyOverlay = (props) => (
    <Tooltip {...props}>
      üëá –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ —Å–∞–º–æ–≥–æ–Ω–Ω–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞, –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –æ—Ç
      –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    </Tooltip>
  );
  const wgeCostCostOverlay = (props) => (
    <Tooltip {...props}>
      üëá –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ–¥—ã –∏ –≥–∞–∑–∞ (–∏–ª–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞),
      –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç–µ –ø—Ä–∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–∏ —Å–∞–º–æ–≥–æ–Ω–∞
    </Tooltip>
  );
  return (
    <div className="container">
      <CardGroup>
        <Card border="dark">
          <Card.Body>
            <Card.Title>
              –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–∏—Å—Ç–∏–ª–ª—è—Ç–∞ (—Å–∞–º–æ–≥–æ–Ω–∞)
            </Card.Title>
            <Card.Text>
              <br />
              <Form.Row>
                <OverlayTrigger
                  placement="top"
                  delay={{ show: 250, hide: 400 }}
                  overlay={rawMaterialsOverlay}
                >
                  <Form.Label
                    className={`${s.p10} text-md-right`}
                    column="sm"
                    lg={6}
                  >
                    –°—ã—Ä—å–µ –¥–ª—è —Å–∞–º–æ–≥–æ–Ω–∞ (–¥–∏—Å—Ç–∏–ª–ª—è—Ç–∞):
                  </Form.Label>
                </OverlayTrigger>
                <Col xs={9} md={4}>
                  <select
                    ref={rawMaterialsRef}
                    onChange={allValuesOnChange}
                    value={props.rawMaterials}
                    className="form-control"
                  >
                    <option value="0.59">–°–∞—Ö–∞—Ä-–ø–µ—Å–æ–∫</option>
                    <option value="0.53">–†–∏—Å–æ–≤–∞—è –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                    <option value="0.45">–ö—É–∫—É—Ä—É–∑–Ω–∞—è –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                    <option value="0.43">–ü—à–µ–Ω–∏—á–Ω–∞—è –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                    <option value="0.39">–ü—à–µ–Ω–æ –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                    <option value="0.35">–ì—Ä–µ—á–∏—Ö–∞ –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                    <option value="0.35">–Ø—á–Ω–∏–µ–≤–∞—è –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                    <option value="0.33">–†–∂–∞–Ω–∞—è –∫—Ä—É–ø–∞ / –º—É–∫–∞</option>
                  </select>
                </Col>
              </Form.Row>
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  <OverlayTrigger
                    placement="top"
                    delay={{ show: 250, hide: 400 }}
                    overlay={materialMassOverlay}
                  >
                    <span variant="success">–ú–∞—Å—Å–∞ —Å—ã—Ä—å—è:</span>
                  </OverlayTrigger>
                </Form.Label>
                <Col xs={9} md={5}>
                  <Form.Control
                    ref={massMaterialsRef}
                    onChange={allValuesOnChange}
                    value={props.massMaterials}
                    type="number"
                    placeholder="–º–∞—Å—Å–∞, –∫–≥."
                  />
                </Col>
                <Col className={`${s.p10} text-left`} xs={3} md={1}>
                  , –∫–≥.
                </Col>
              </Form.Row>
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  <OverlayTrigger
                    placement="top"
                    delay={{ show: 250, hide: 400 }}
                    overlay={costMaterialsOverlay}
                  >
                    <span variant="success">–°—Ç–æ–∏–º–æ—Å—Ç—å —Å—ã—Ä—å—è –∑–∞ 1 –∫–≥.:</span>
                  </OverlayTrigger>
                </Form.Label>
                <Col xs={9} md={5}>
                  <Form.Control
                    ref={costMaterialsRef}
                    onChange={allValuesOnChange}
                    value={props.costMaterials}
                    type="number"
                    placeholder="—Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ä—É–±."
                  />
                </Col>
                <Col className={`${s.p10} text-left`} xs={3} md={1}>
                  , ‚ÇΩ.
                </Col>
              </Form.Row>
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  <OverlayTrigger
                    placement="top"
                    delay={{ show: 250, hide: 400 }}
                    overlay={yeastCostOverlay}
                  >
                    <span variant="success">–°—Ç–æ–∏–º–æ—Å—Ç—å –¥—Ä–æ–∂–∂–µ–π:</span>
                  </OverlayTrigger>
                </Form.Label>
                <Col xs={9} md={4}>
                  <Form.Control
                    ref={yeastCostRef}
                    onChange={allValuesOnChange}
                    value={props.yeastCost}
                    type="number"
                    placeholder="—Ü–µ–Ω–∞, —Ä—É–±."
                  />
                </Col>
                <Col className={`${s.p10} text-left`} xs={3} md={2}>
                  , —Ä—É–±.
                </Col>
              </Form.Row>
              <br />
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  <OverlayTrigger
                    placement="top"
                    delay={{ show: 250, hide: 400 }}
                    overlay={wgeCostCostOverlay}
                  >
                    <span variant="success">–í–æ–¥–∞, –≥–∞–∑ / —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ:</span>
                  </OverlayTrigger>
                </Form.Label>
                <Col xs={9} md={5}>
                  <Form.Control
                    ref={wgeRef}
                    onChange={allValuesOnChange}
                    value={props.wge}
                    type="number"
                    placeholder="—Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ä—É–±."
                  />
                </Col>
                <Col className={`${s.p10} text-left`} xs={3} md={1}>
                  , ‚ÇΩ.
                </Col>
              </Form.Row>
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  <OverlayTrigger
                    placement="top"
                    delay={{ show: 250, hide: 400 }}
                    overlay={bentoniteCostOverlay}
                  >
                    <span variant="success">–°—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–Ω—Ç–æ–Ω–∏—Ç–∞ / —É–≥–ª—è:</span>
                  </OverlayTrigger>
                </Form.Label>
                <Col xs={9} md={5}>
                  <Form.Control
                    ref={bentoniteCoalRef}
                    onChange={allValuesOnChange}
                    value={props.bentoniteCoal}
                    type="number"
                    placeholder="—Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ä—É–±."
                  />
                </Col>
                <Col className={`${s.p10} text-left`} xs={3} md={1}>
                  , ‚ÇΩ.
                </Col>
              </Form.Row>
              <br />
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  <OverlayTrigger
                    placement="top"
                    delay={{ show: 250, hide: 400 }}
                    overlay={efficiencyOverlay}
                  >
                    <span variant="success">–ö–ü–î —Å–∞–º–æ–≥–æ–Ω–Ω–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞:</span>
                  </OverlayTrigger>
                </Form.Label>
                <Col xs={9} md={5}>
                  <Form.Control
                    ref={efficiencyRef}
                    onChange={allValuesOnChange}
                    value={props.efficiency}
                    type="number"
                    placeholder="–ö–ü–î, %"
                  />
                </Col>
                <Col className={`${s.p10} text-left`} xs={3} md={1}>
                  , %
                </Col>
              </Form.Row>
              <br />
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  –î–æ–ª—è ¬´–ì–æ–ª–æ–≤¬ª:
                </Form.Label>
                <Col xs={4} md={2}>
                  <select
                    ref={headsRef}
                    onChange={allValuesOnChange}
                    value={props.heads}
                    className="form-control"
                  >
                    <option value="0.1">10%</option>
                    <option value="0.11">11%</option>
                    <option value="0.12">12%</option>
                    <option value="0.13">13%</option>
                    <option value="0.14">14%</option>
                    <option value="0.15">15%</option>
                  </select>
                </Col>
                <Col xs={8} md={4} className={`${s.p10} text-left`}>
                  –æ—Ç –æ–±—â–µ–≥–æ –æ–±—ä—ë–º–∞
                </Col>
              </Form.Row>
              <Form.Row>
                <Form.Label
                  className={`${s.p10} text-md-right`}
                  column="sm"
                  lg={6}
                >
                  –î–æ–ª—è ¬´–•–≤–æ—Å—Ç–æ–≤¬ª:
                </Form.Label>
                <Col xs={4} md={2}>
                  <select
                    ref={tailsRef}
                    onChange={allValuesOnChange}
                    value={props.tails}
                    className="form-control"
                  >
                    <option value="0.2">20%</option>
                    <option value="0.10">10%</option>
                    <option value="0.15">15%</option>
                    <option value="0.25">25%</option>
                  </select>
                </Col>
                <Col xs={8} md={4} className={`${s.p10} text-left`}>
                  –æ—Ç –æ–±—â–µ–≥–æ –æ–±—ä—ë–º–∞
                </Col>
              </Form.Row>
            </Card.Text>
          </Card.Body>
        </Card>
        <Card border="dark" bg="primary" text="white" className="text-center">
          <div className="blockquote mb-0 card-body">
            {addCalculateSebestoimApproxElements}
          </div>
        </Card>
      </CardGroup>
      <br />
    </div>
  );
};

export default SebestoimApproxCalc;
